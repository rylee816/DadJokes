{"version":3,"sources":["Joke.jsx","JokesList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Joke","props","color","emoji","colorArray","votes","length","className","onClick","handleUpvote","style","borderColor","handleDownvote","joke","aria-label","JokesList","useState","JSON","parse","window","localStorage","getItem","jokes","setJokes","loading","setLoading","setItem","stringify","seenJokes","Set","map","j","body","getJokes","a","jokesArray","numJokesToGet","headers","Accept","Axios","get","response","data","id","has","console","log","push","prev","alert","handleVote","delta","useEffect","sortedJokes","sort","b","src","alt","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93cf026c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Joke.css\"\r\n\r\nfunction Joke(props){\r\n\r\n  const colorArray = [\"#f44336\", \"#ff9800\", \"#ff9800\", \"#ffc107\", \"#ffeb3b\", \"#cddc39\", \"#8bc34a\", \"#4caf50\"];\r\n  const emojiArray = [\"em em-angry\", \"em em-confused\", \"em em-neutral_face\", \"em em-slightly_smiling_face\", \"em em-smiley\", \"em em-laughing\", \"em em-rolling_on_the_floor_laughing\", \"em em-heart_eyes\"]\r\n  let color;\r\n  let emoji;\r\n\r\n if(props.votes < 0){\r\n    color = \"red\"\r\n    emoji = \"em em-face_with_symbols_on_mouth\"\r\n  }else if(props.votes < colorArray.length && props.votes >= 0 ){\r\n    color = colorArray[props.votes]\r\n    emoji = emojiArray[props.votes]\r\n} else {\r\n    color = \"limegreen\";\r\n    emoji = \"em em-heart_eyes\";\r\n}\r\n\r\n    return (\r\n        <div className=\"Joke\">\r\n          <div className=\"Joke-buttons\">\r\n            <i className=\"fas fa-arrow-up\" onClick={props.handleUpvote}></i>\r\n              <span className=\"Joke-votes\" style={{borderColor:color}} >{props.votes}</span>\r\n            <i className=\"fas fa-arrow-down\" onClick={props.handleDownvote}></i>\r\n          </div>\r\n          <div className=\"Joke-text\">\r\n            <h3>{props.joke}</h3>\r\n          </div>\r\n          <div className=\"Joke-smiley\">\r\n          <i className={emoji} aria-label=\"ROLLING ON THE FLOOR LAUGHING\"></i>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Joke;","import Axios from \"axios\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Joke from \"./Joke\";\r\nimport \"./JokesList.css\"\r\n\r\nfunction JokesList(props){\r\n\r\nconst [jokes, setJokes] = useState(JSON.parse(window.localStorage.getItem(\"jokes\")) || []); \r\nconst [loading, setLoading] = useState(false)\r\nlet votes = window.localStorage.setItem(\"jokes\", JSON.stringify(jokes));\r\nconst seenJokes = new Set(jokes.map(j => j.body))\r\nconsole.log(seenJokes);\r\n\r\nasync function getJokes(){\r\n  try {\r\n    let jokesArray = []\r\n    while(jokesArray.length < props.numJokesToGet){\r\n        const headers = {headers:{Accept: \"application/json\"}};\r\n        const response = await Axios.get(`https://icanhazdadjoke.com/`, headers);\r\n        const {id, joke} = response.data;\r\n        if(!seenJokes.has(joke)){\r\n          jokesArray.push({id: id, body: joke, votes: 0});\r\n        } else {\r\n          console.log(\"Found duplicate \");\r\n        }\r\n    }\r\n        setJokes((prev) => {\r\n          return [...prev, ...jokesArray];\r\n        })\r\n        setLoading(false)\r\n      } catch(e) {\r\n        alert(e)\r\n        setLoading(false)\r\n      }\r\n};\r\n\r\n   useEffect(() => {\r\n    if(jokes.length === 0){\r\n      getJokes();\r\n    }\r\n   },[votes]);\r\n  //  console.log(jokes);\r\n\r\n   function handleVote(id, delta){\r\n      setJokes((prev) => {\r\n        return prev.map((j) => {\r\n         return j.id === id ? {...j, votes: j.votes + delta} : j;\r\n        })\r\n      })\r\n   }\r\n\r\n   function handleClick(){\r\n     setLoading(true)\r\n     getJokes()\r\n   }\r\n\r\n   let sortedJokes = jokes.sort((a,b) => b.votes - a.votes)\r\n    return (\r\n        loading ? <div className=\"JokesList-spinner\">\r\n          <i className=\"far fa-10x fa-laugh fa-spin\"></i>\r\n          <h1 className=\"JokesList-title\">Loading...</h1>\r\n        </div> :\r\n\r\n        <div className=\"JokesList\">\r\n          <div className=\"JokesList-sidebar\">\r\n            <h1 className=\"JokesList-title\">\r\n              <span>Dad</span>Jokes\r\n            </h1>\r\n            <img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\" alt=\"\" />\r\n            <button className=\"JokesList-getmore\" onClick={handleClick}>New Jokes</button>\r\n          </div>\r\n            <div className=\"JokesList-joke\">\r\n            {sortedJokes.map((j,index) => {\r\n          return(\r\n              <div>\r\n              <Joke key={index} id={j.id} joke={j.body} votes={j.votes} handleUpvote={()=>handleVote(j.id, 1)} handleDownvote={()=>handleVote(j.id, -1)}/> \r\n              </div>\r\n          )\r\n        })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JokesList;","import React from \"react\"\nimport JokesList from \"./JokesList\";\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokesList numJokesToGet={10}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}